
#########
# Perse
#########

[package]
name = "perse"
version = "0.1.14"
description.workspace = true
repository.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true

[dependencies]
perse_controller = { workspace = true, optional = true }
perse_data = { workspace = true, optional = true }

leptos = { workspace = true }
leptos_meta = { workspace = true }
leptos_actix = { workspace = true, optional = true }
leptos_router = { workspace = true }
http = { workspace = true, optional = true }
cfg-if = { workspace = true }
actix-files = { version = "=0.6.5", optional = true }
actix-web = { version = "=4.5.1", optional = true, features = ["macros"] }
console_log = { version = "=1" }
console_error_panic_hook = { version = "=0.1.7" }
wasm-bindgen = { version = "=0.2.87" }

[dev-dependencies]

[features]
hydrate = [
  "dep:perse_controller",

  "leptos/hydrate",
  "leptos_meta/hydrate",
  "leptos_router/hydrate",
]
ssr = [
  "dep:perse_controller",
  "perse_data/ssr",

  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "leptos_actix",
  "dep:actix-files",
  "dep:actix-web",
]

##########################
### Leptos Configuration
##########################
[lib]
crate-type = ["cdylib", "rlib"]

[package.metadata.leptos]
output-name = "perse" # The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
end2end-dir = "end2end" # The site-root relative folder where all backend (SSR) project code is located. Defaults to end2end-dir
site-root = "target/site" # The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup
site-pkg-dir = "pkg" # The site-root relative folder where all compiled output (JS, WASM and CSS) is written. Defaults to pkg	
style-file = "themes/default/style/main.scss" # [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
assets-dir = "themes/default/assets" # Assets source dir. All files found here will be copied and synchronized to site-root. The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir. [Optional] Env: Leptos_ASSETS_DIR
site-addr = "127.0.0.1:3000" # The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
reload-port = 3001 # The port to use for automatic reload monitoring
end2end-cmd = "npx playwright test" # [Optional] Command to use when running end2end tests. It will run in the end2end dir. [Windows] for non-WSL use "npx.cmd playwright test". This binary name can be checked in Powershell with Get-Command npx
browserquery = "defaults" #  The browserlist query used for optimizing the CSS
watch = false # Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
env = "DEV" # The environment Leptos will run in, usually either "DEV" or "PROD"
bin-features = ["ssr"] # The features to use when compiling the bin target. [Optional] Can be over-ridden with the command line parameter --bin-features
bin-default-features = false # If the --no-default-features flag should be used when compiling the bin target. [Optional] Defaults to false
lib-features = ["hydrate"] # The features to use when compiling the lib target. [Optional] Can be over-ridden with the command line parameter --lib-features
lib-default-features = false # If the --no-default-features flag should be used when compiling the lib target. [Optional] Defaults to false
